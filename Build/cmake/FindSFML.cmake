
find_path(SFML_INCLUDE_DIR Config.hpp
	HINTS
	ENV SFML_DIR
	PATH_SUFFIXES SFML
	# path suffixes to search inside ENV{SFML_DIR}
	include/SFML include
)

find_library(SFML_SYSTEM_LIBRARY
	NAMES sfml-system
	HINTS
	ENV SFML_DIR
	PATH_SUFFIXES lib 
)
find_library(SFML_GRAPHICS_LIBRARY
	NAMES sfml-graphics
	HINTS
	ENV SFML_DIR
	PATH_SUFFIXES lib 
)
find_library(SFML_WINDOW_LIBRARY
	NAMES sfml-window
	HINTS
	ENV SFML_DIR
	PATH_SUFFIXES lib 
)

if(SFML_INCLUDE_DIR AND EXISTS "${SFML_INCLUDE_DIR}/Config.hpp")
	file(STRINGS "${SFML_INCLUDE_DIR}/Config.hpp" SFML_VERSION_MAJOR_LINE REGEX "^#define[ \t]+SFML_VERSION_MAJOR[ \t]+[0-9]+$")
	file(STRINGS "${SFML_INCLUDE_DIR}/Config.hpp" SFML_VERSION_MINOR_LINE REGEX "^#define[ \t]+SFML_VERSION_MINOR[ \t]+[0-9]+$")
	string(REGEX REPLACE "^#define[ \t]+SFML_VERSION_MAJOR[ \t]+([0-9]+)$" "\\1" SFML_MAJOR_VERSION "${SFML_VERSION_MAJOR_LINE}")
	string(REGEX REPLACE "^#define[ \t]+SFML_VERSION_MINOR[ \t]+([0-9]+)$" "\\1" SFML_MINOR_VERSION "${SFML_VERSION_MINOR_LINE}")
	unset(SFML_VERSION_MAJOR_LINE)
	unset(SFML_VERSION_MINOR_LINE)

	set(SFML_VERSION_STRING ${SFML_MAJOR_VERSION}.${SFML_MINOR_VERSION})
endif()


include(FindPackageHandleStandardArgs)

if(SFML_MAJOR_VERSION GREATER 1)
	set(SFML2_MAJOR_VERSION ${SFML_MAJOR_VERSION})
	set(SFML2_MINOR_VERSION ${SFML_MINOR_VERSION})
	set(SFML2_VERSION_STRING ${SFML2_MAJOR_VERSION}.${SFML2_MINOR_VERSION})

	set(SFML2_INCLUDE_DIR ${SFML_INCLUDE_DIR})
	set(SFML2_GRAPHICS_LIBRARY ${SFML_GRAPHICS_LIBRARY})
	set(SFML2_SYSTEM_LIBRARY ${SFML_SYSTEM_LIBRARY})
	set(SFML2_WINDOW_LIBRARY ${SFML_WINDOW_LIBRARY})

	FIND_PACKAGE_HANDLE_STANDARD_ARGS(SFML2
		REQUIRED_VARS SFML2_SYSTEM_LIBRARY SFML2_GRAPHICS_LIBRARY SFML2_WINDOW_LIBRARY SFML2_INCLUDE_DIR
		VERSION_VAR SFML2_VERSION_STRING
	)
else()
	FIND_PACKAGE_HANDLE_STANDARD_ARGS(SFML
		REQUIRED_VARS SFML_SYSTEM_LIBRARY SFML_GRAPHICS_LIBRARY SFML_WINDOW_LIBRARY SFML_INCLUDE_DIR
		VERSION_VAR SFML_VERSION_STRING
	)
endif()
